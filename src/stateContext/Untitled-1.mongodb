// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
// use('mongodbVSCodePlaygroundDB');

// // The drop() command destroys all data from a collection.
// // Make sure you run it against proper database and collection.
// db.sales.drop();

// // Insert a few documents into the sales collection.
// db.sales.insertMany([
//   { '_id' : 1, 'item' : 'abc', 'price' : 10, 'quantity' : 2, 'date' : new Date('2014-03-01T08:00:00Z') },
//   { '_id' : 2, 'item' : 'jkl', 'price' : 20, 'quantity' : 1, 'date' : new Date('2014-03-01T09:00:00Z') },
//   { '_id' : 3, 'item' : 'xyz', 'price' : 5, 'quantity' : 10, 'date' : new Date('2014-03-15T09:00:00Z') },
//   { '_id' : 4, 'item' : 'xyz', 'price' : 5, 'quantity' :  20, 'date' : new Date('2014-04-04T11:21:39.736Z') },
//   { '_id' : 5, 'item' : 'abc', 'price' : 10, 'quantity' : 10, 'date' : new Date('2014-04-04T21:23:13.331Z') },
//   { '_id' : 6, 'item' : 'def', 'price' : 7.5, 'quantity': 5, 'date' : new Date('2015-06-04T05:08:13Z') },
//   { '_id' : 7, 'item' : 'def', 'price' : 7.5, 'quantity': 10, 'date' : new Date('2015-09-10T08:43:00Z') },
//   { '_id' : 8, 'item' : 'abc', 'price' : 10, 'quantity' : 5, 'date' : new Date('2016-02-06T20:20:13Z') },
// ]);

// // Run a find command to view items sold on April 4th, 2014.
// db.sales.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });

// // Run an aggregation to view total sales for each product in 2014.
// const aggregation = [
//   { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
//   { $group: { _id : '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
// ];
// db.sales.aggregate(aggregation);
 
 use ('Dragora_Selector')
// db.title_records.updateMany({}, {$set: {"genres": []}})
// mongodb+srv://cluster0-ep2da.gcp.mongodb.net/test" --username Drag?replicaSet=Cluster0-shard-0&readPreference=primary&authSource=admin&ssl=true
//  const query = {titleMBID: "c08d29a7-e402-4238-8c72-0b1a2395df52"}
//  const project = {'tags.genre': true, 'genres': true}
// // https://stackoverflow.com/questions/650022/how-do-i-split-a-string-with-multiple-separators-in-javascript 
//  function splitMulti(str, tokens){
//         var tempChar = tokens[0]; // We can use the first token as a temporary join character
//         for(var i = 1; i < tokens.length; i++){
//             str = str.split(tokens[i]).trim().join(tempChar);
//         }
//         str = str.split(tempChar).toLowerCase();
//         return str;
// }




// let valuesSplit = values.map(el => {splitMulti(el, ['/', ' ', '-'])})
// const accumValues = [...[], ...valuesSplit]
// const update = {$addToSet:{"genres":{$each: accumValues}}}


// db.title_records.find({}, {titleMBID: true, 'tags.genre': true}).map(elem => {
//     const tempQuery = elem.titleMBID
// const values = db.title_records.distinct("tags.genre", tempQuery)
// let valuesSplit = values.map(e_id__baas_transactionl => {splitMulti(el, ['/', ' '])})
// const accumValues = [...[], ...valuesSplit]
// const tempUpdate = {$addToSet:{"genres":{$each: accumValues}}}
// db.title_records.updateOne(tempQuery, tempUpdate, {upsert: true})

// })
const query = {"genres": {$exists: false}}
db.title_records.find(query, {"titleName": 1, 'artist': 1, 'titleMBID': 1, "updated": 1})
